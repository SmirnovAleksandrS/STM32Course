ARM GAS  /tmp/cc3jRm2D.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cc3jRm2D.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef huart6;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** // uint8_t tx_buff[]={0,1,2,3,64,5,6,7,8,48};
  61:Core/Src/main.c **** char tx_buff = 'c';
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/cc3jRm2D.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   // MX_USART6_UART_Init();
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c ****   RCC->APB2ENR |= RCC_APB2ENR_USART6EN;
  95:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<14);   // Bits (5:4)= 1:0 --> Alternate Function for Pin PC7
  96:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<12);
  97:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<24);   //выбираем альтернативную функцию 8, т.
  98:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<28);
  99:Core/Src/main.c ****   USART6->BRR = 0x8B;         //BRR для бодрейта 115200 при оверсемплиге 
 100:Core/Src/main.c ****   USART6->CR1 |= (1 << 0);
 101:Core/Src/main.c ****   USART6->CR1 |= (1 << 3);
 102:Core/Src/main.c ****   // USART6->OVER8 = 0;
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c ****     // HAL_UART_Transmit(&huart6, &tx_buff, 1, 1000);
 112:Core/Src/main.c ****     USART6->TDR = 'a';  //отправляем а в буферный регистр
 113:Core/Src/main.c ****     HAL_Delay(1000);
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c ****   /* USER CODE END 3 */
 117:Core/Src/main.c **** }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****   * @brief System Clock Configuration
 121:Core/Src/main.c ****   * @retval None
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c **** void SystemClock_Config(void)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Configure LSE Drive Capability
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 138:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145:Core/Src/main.c ****   {
ARM GAS  /tmp/cc3jRm2D.s 			page 4


 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /**
 165:Core/Src/main.c ****   * @brief USART6 Initialization Function
 166:Core/Src/main.c ****   * @param None
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 179:Core/Src/main.c ****   huart6.Instance = USART6;
 180:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 181:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 182:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 183:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 184:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 185:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 186:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 187:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 188:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 189:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****   * @brief GPIO Initialization Function
 201:Core/Src/main.c ****   * @param None
 202:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/cc3jRm2D.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** static void MX_GPIO_Init(void)
 205:Core/Src/main.c **** {
  28              		.loc 1 205 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 84B0     		sub	sp, sp, #16
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
 206:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 207:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 210:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  36              		.loc 1 210 3 view .LVU1
  37              	.LBB4:
  38              		.loc 1 210 3 view .LVU2
  39              		.loc 1 210 3 view .LVU3
  40 0002 0F4B     		ldr	r3, .L3
  41 0004 1A6B     		ldr	r2, [r3, #48]
  42 0006 42F00102 		orr	r2, r2, #1
  43 000a 1A63     		str	r2, [r3, #48]
  44              		.loc 1 210 3 view .LVU4
  45 000c 1A6B     		ldr	r2, [r3, #48]
  46 000e 02F00102 		and	r2, r2, #1
  47 0012 0192     		str	r2, [sp, #4]
  48              		.loc 1 210 3 view .LVU5
  49 0014 019A     		ldr	r2, [sp, #4]
  50              	.LBE4:
  51              		.loc 1 210 3 view .LVU6
 211:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 211 3 view .LVU7
  53              	.LBB5:
  54              		.loc 1 211 3 view .LVU8
  55              		.loc 1 211 3 view .LVU9
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c 1A63     		str	r2, [r3, #48]
  59              		.loc 1 211 3 view .LVU10
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0292     		str	r2, [sp, #8]
  63              		.loc 1 211 3 view .LVU11
  64 0026 029A     		ldr	r2, [sp, #8]
  65              	.LBE5:
  66              		.loc 1 211 3 view .LVU12
 212:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  67              		.loc 1 212 3 view .LVU13
  68              	.LBB6:
  69              		.loc 1 212 3 view .LVU14
  70              		.loc 1 212 3 view .LVU15
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 212 3 view .LVU16
ARM GAS  /tmp/cc3jRm2D.s 			page 6


  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F08003 		and	r3, r3, #128
  77 0036 0393     		str	r3, [sp, #12]
  78              		.loc 1 212 3 view .LVU17
  79 0038 039B     		ldr	r3, [sp, #12]
  80              	.LBE6:
  81              		.loc 1 212 3 view .LVU18
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 215:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 216:Core/Src/main.c **** }
  82              		.loc 1 216 1 is_stmt 0 view .LVU19
  83 003a 04B0     		add	sp, sp, #16
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 0
  86              		@ sp needed
  87 003c 7047     		bx	lr
  88              	.L4:
  89 003e 00BF     		.align	2
  90              	.L3:
  91 0040 00380240 		.word	1073887232
  92              		.cfi_endproc
  93              	.LFE144:
  95              		.section	.text.Error_Handler,"ax",%progbits
  96              		.align	1
  97              		.global	Error_Handler
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	Error_Handler:
 103              	.LFB145:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /* USER CODE END 4 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** void Error_Handler(void)
 227:Core/Src/main.c **** {
 104              		.loc 1 227 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 228:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 229:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 230:Core/Src/main.c ****   __disable_irq();
 110              		.loc 1 230 3 view .LVU21
 111              	.LBB7:
 112              	.LBI7:
 113              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  /tmp/cc3jRm2D.s 			page 7


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  /tmp/cc3jRm2D.s 			page 8


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc3jRm2D.s 			page 9


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 114              		.loc 2 140 27 view .LVU22
 115              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 116              		.loc 2 142 3 view .LVU23
 117              		.syntax unified
 118              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 119 0000 72B6     		cpsid i
 120              	@ 0 "" 2
 121              		.thumb
 122              		.syntax unified
 123              	.L6:
 124              	.LBE8:
 125              	.LBE7:
 231:Core/Src/main.c ****   while (1)
 126              		.loc 1 231 3 view .LVU24
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****   }
 127              		.loc 1 233 3 view .LVU25
 231:Core/Src/main.c ****   while (1)
 128              		.loc 1 231 9 view .LVU26
 129 0002 FEE7     		b	.L6
 130              		.cfi_endproc
 131              	.LFE145:
 133              		.section	.text.SystemClock_Config,"ax",%progbits
 134              		.align	1
 135              		.global	SystemClock_Config
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SystemClock_Config:
 141              	.LFB142:
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/cc3jRm2D.s 			page 10


 142              		.loc 1 124 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 80
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 151 0002 94B0     		sub	sp, sp, #80
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 88
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154              		.loc 1 125 3 view .LVU28
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 155              		.loc 1 125 22 is_stmt 0 view .LVU29
 156 0004 3022     		movs	r2, #48
 157 0006 0021     		movs	r1, #0
 158 0008 08A8     		add	r0, sp, #32
 159 000a FFF7FEFF 		bl	memset
 160              	.LVL0:
 126:Core/Src/main.c **** 
 161              		.loc 1 126 3 is_stmt 1 view .LVU30
 126:Core/Src/main.c **** 
 162              		.loc 1 126 22 is_stmt 0 view .LVU31
 163 000e 0024     		movs	r4, #0
 164 0010 0394     		str	r4, [sp, #12]
 165 0012 0494     		str	r4, [sp, #16]
 166 0014 0594     		str	r4, [sp, #20]
 167 0016 0694     		str	r4, [sp, #24]
 168 0018 0794     		str	r4, [sp, #28]
 130:Core/Src/main.c **** 
 169              		.loc 1 130 3 is_stmt 1 view .LVU32
 170 001a FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 171              	.LVL1:
 134:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 172              		.loc 1 134 3 view .LVU33
 173              	.LBB9:
 134:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 174              		.loc 1 134 3 view .LVU34
 134:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 175              		.loc 1 134 3 view .LVU35
 176 001e 194B     		ldr	r3, .L13
 177 0020 1A6C     		ldr	r2, [r3, #64]
 178 0022 42F08052 		orr	r2, r2, #268435456
 179 0026 1A64     		str	r2, [r3, #64]
 134:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 180              		.loc 1 134 3 view .LVU36
 181 0028 1B6C     		ldr	r3, [r3, #64]
 182 002a 03F08053 		and	r3, r3, #268435456
 183 002e 0193     		str	r3, [sp, #4]
 134:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 184              		.loc 1 134 3 view .LVU37
 185 0030 019B     		ldr	r3, [sp, #4]
 186              	.LBE9:
 134:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 187              		.loc 1 134 3 view .LVU38
ARM GAS  /tmp/cc3jRm2D.s 			page 11


 135:Core/Src/main.c **** 
 188              		.loc 1 135 3 view .LVU39
 189              	.LBB10:
 135:Core/Src/main.c **** 
 190              		.loc 1 135 3 view .LVU40
 135:Core/Src/main.c **** 
 191              		.loc 1 135 3 view .LVU41
 192 0032 154A     		ldr	r2, .L13+4
 193 0034 1368     		ldr	r3, [r2]
 194 0036 23F44043 		bic	r3, r3, #49152
 195 003a 43F48043 		orr	r3, r3, #16384
 196 003e 1360     		str	r3, [r2]
 135:Core/Src/main.c **** 
 197              		.loc 1 135 3 view .LVU42
 198 0040 1368     		ldr	r3, [r2]
 199 0042 03F44043 		and	r3, r3, #49152
 200 0046 0293     		str	r3, [sp, #8]
 135:Core/Src/main.c **** 
 201              		.loc 1 135 3 view .LVU43
 202 0048 029B     		ldr	r3, [sp, #8]
 203              	.LBE10:
 135:Core/Src/main.c **** 
 204              		.loc 1 135 3 view .LVU44
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 205              		.loc 1 140 3 view .LVU45
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 206              		.loc 1 140 36 is_stmt 0 view .LVU46
 207 004a 0223     		movs	r3, #2
 208 004c 0893     		str	r3, [sp, #32]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 209              		.loc 1 141 3 is_stmt 1 view .LVU47
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 210              		.loc 1 141 30 is_stmt 0 view .LVU48
 211 004e 0123     		movs	r3, #1
 212 0050 0B93     		str	r3, [sp, #44]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 213              		.loc 1 142 3 is_stmt 1 view .LVU49
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 214              		.loc 1 142 41 is_stmt 0 view .LVU50
 215 0052 1023     		movs	r3, #16
 216 0054 0C93     		str	r3, [sp, #48]
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 217              		.loc 1 143 3 is_stmt 1 view .LVU51
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 218              		.loc 1 143 34 is_stmt 0 view .LVU52
 219 0056 0E94     		str	r4, [sp, #56]
 144:Core/Src/main.c ****   {
 220              		.loc 1 144 3 is_stmt 1 view .LVU53
 144:Core/Src/main.c ****   {
 221              		.loc 1 144 7 is_stmt 0 view .LVU54
 222 0058 08A8     		add	r0, sp, #32
 223 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 224              	.LVL2:
 144:Core/Src/main.c ****   {
 225              		.loc 1 144 6 discriminator 1 view .LVU55
 226 005e 60B9     		cbnz	r0, .L11
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/cc3jRm2D.s 			page 12


 227              		.loc 1 151 3 is_stmt 1 view .LVU56
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 228              		.loc 1 151 31 is_stmt 0 view .LVU57
 229 0060 0F23     		movs	r3, #15
 230 0062 0393     		str	r3, [sp, #12]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 231              		.loc 1 153 3 is_stmt 1 view .LVU58
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 232              		.loc 1 153 34 is_stmt 0 view .LVU59
 233 0064 0021     		movs	r1, #0
 234 0066 0491     		str	r1, [sp, #16]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 235              		.loc 1 154 3 is_stmt 1 view .LVU60
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 236              		.loc 1 154 35 is_stmt 0 view .LVU61
 237 0068 0591     		str	r1, [sp, #20]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 238              		.loc 1 155 3 is_stmt 1 view .LVU62
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 239              		.loc 1 155 36 is_stmt 0 view .LVU63
 240 006a 0691     		str	r1, [sp, #24]
 156:Core/Src/main.c **** 
 241              		.loc 1 156 3 is_stmt 1 view .LVU64
 156:Core/Src/main.c **** 
 242              		.loc 1 156 36 is_stmt 0 view .LVU65
 243 006c 0791     		str	r1, [sp, #28]
 158:Core/Src/main.c ****   {
 244              		.loc 1 158 3 is_stmt 1 view .LVU66
 158:Core/Src/main.c ****   {
 245              		.loc 1 158 7 is_stmt 0 view .LVU67
 246 006e 03A8     		add	r0, sp, #12
 247 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 248              	.LVL3:
 158:Core/Src/main.c ****   {
 249              		.loc 1 158 6 discriminator 1 view .LVU68
 250 0074 18B9     		cbnz	r0, .L12
 162:Core/Src/main.c **** 
 251              		.loc 1 162 1 view .LVU69
 252 0076 14B0     		add	sp, sp, #80
 253              	.LCFI4:
 254              		.cfi_remember_state
 255              		.cfi_def_cfa_offset 8
 256              		@ sp needed
 257 0078 10BD     		pop	{r4, pc}
 258              	.L11:
 259              	.LCFI5:
 260              		.cfi_restore_state
 146:Core/Src/main.c ****   }
 261              		.loc 1 146 5 is_stmt 1 view .LVU70
 262 007a FFF7FEFF 		bl	Error_Handler
 263              	.LVL4:
 264              	.L12:
 160:Core/Src/main.c ****   }
 265              		.loc 1 160 5 view .LVU71
 266 007e FFF7FEFF 		bl	Error_Handler
 267              	.LVL5:
 268              	.L14:
ARM GAS  /tmp/cc3jRm2D.s 			page 13


 269 0082 00BF     		.align	2
 270              	.L13:
 271 0084 00380240 		.word	1073887232
 272 0088 00700040 		.word	1073770496
 273              		.cfi_endproc
 274              	.LFE142:
 276              		.section	.text.main,"ax",%progbits
 277              		.align	1
 278              		.global	main
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	main:
 284              	.LFB141:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 285              		.loc 1 69 1 view -0
 286              		.cfi_startproc
 287              		@ Volatile: function does not return.
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 295              		.loc 1 77 3 view .LVU73
 296 0002 FFF7FEFF 		bl	HAL_Init
 297              	.LVL6:
  84:Core/Src/main.c **** 
 298              		.loc 1 84 3 view .LVU74
 299 0006 FFF7FEFF 		bl	SystemClock_Config
 300              	.LVL7:
  91:Core/Src/main.c ****   // MX_USART6_UART_Init();
 301              		.loc 1 91 3 view .LVU75
 302 000a FFF7FEFF 		bl	MX_GPIO_Init
 303              	.LVL8:
  94:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<14);   // Bits (5:4)= 1:0 --> Alternate Function for Pin PC7
 304              		.loc 1 94 3 view .LVU76
  94:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<14);   // Bits (5:4)= 1:0 --> Alternate Function for Pin PC7
 305              		.loc 1 94 6 is_stmt 0 view .LVU77
 306 000e 154A     		ldr	r2, .L18
 307 0010 536C     		ldr	r3, [r2, #68]
  94:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<14);   // Bits (5:4)= 1:0 --> Alternate Function for Pin PC7
 308              		.loc 1 94 16 view .LVU78
 309 0012 43F02003 		orr	r3, r3, #32
 310 0016 5364     		str	r3, [r2, #68]
  95:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<12);
 311              		.loc 1 95 3 is_stmt 1 view .LVU79
  95:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<12);
 312              		.loc 1 95 8 is_stmt 0 view .LVU80
 313 0018 134B     		ldr	r3, .L18+4
 314 001a 1A68     		ldr	r2, [r3]
  95:Core/Src/main.c ****   GPIOC->MODER 	 |= (2<<12);
 315              		.loc 1 95 18 view .LVU81
 316 001c 42F40042 		orr	r2, r2, #32768
 317 0020 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc3jRm2D.s 			page 14


  96:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<24);   //выбираем альтернативную функцию 8, т.
 318              		.loc 1 96 3 is_stmt 1 view .LVU82
  96:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<24);   //выбираем альтернативную функцию 8, т.
 319              		.loc 1 96 8 is_stmt 0 view .LVU83
 320 0022 1A68     		ldr	r2, [r3]
  96:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<24);   //выбираем альтернативную функцию 8, т.
 321              		.loc 1 96 18 view .LVU84
 322 0024 42F40052 		orr	r2, r2, #8192
 323 0028 1A60     		str	r2, [r3]
  97:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<28);
 324              		.loc 1 97 3 is_stmt 1 view .LVU85
  97:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<28);
 325              		.loc 1 97 13 is_stmt 0 view .LVU86
 326 002a 1A6A     		ldr	r2, [r3, #32]
  97:Core/Src/main.c ****   GPIOC->AFR[0] |= (8<<28);
 327              		.loc 1 97 17 view .LVU87
 328 002c 42F00062 		orr	r2, r2, #134217728
 329 0030 1A62     		str	r2, [r3, #32]
  98:Core/Src/main.c ****   USART6->BRR = 0x8B;         //BRR для бодрейта 115200 при оверсемплиге 
 330              		.loc 1 98 3 is_stmt 1 view .LVU88
  98:Core/Src/main.c ****   USART6->BRR = 0x8B;         //BRR для бодрейта 115200 при оверсемплиге 
 331              		.loc 1 98 13 is_stmt 0 view .LVU89
 332 0032 1A6A     		ldr	r2, [r3, #32]
  98:Core/Src/main.c ****   USART6->BRR = 0x8B;         //BRR для бодрейта 115200 при оверсемплиге 
 333              		.loc 1 98 17 view .LVU90
 334 0034 42F00042 		orr	r2, r2, #-2147483648
 335 0038 1A62     		str	r2, [r3, #32]
  99:Core/Src/main.c ****   USART6->CR1 |= (1 << 0);
 336              		.loc 1 99 3 is_stmt 1 view .LVU91
  99:Core/Src/main.c ****   USART6->CR1 |= (1 << 0);
 337              		.loc 1 99 15 is_stmt 0 view .LVU92
 338 003a A3F57443 		sub	r3, r3, #62464
 339 003e 8B22     		movs	r2, #139
 340 0040 DA60     		str	r2, [r3, #12]
 100:Core/Src/main.c ****   USART6->CR1 |= (1 << 3);
 341              		.loc 1 100 3 is_stmt 1 view .LVU93
 100:Core/Src/main.c ****   USART6->CR1 |= (1 << 3);
 342              		.loc 1 100 9 is_stmt 0 view .LVU94
 343 0042 1A68     		ldr	r2, [r3]
 100:Core/Src/main.c ****   USART6->CR1 |= (1 << 3);
 344              		.loc 1 100 15 view .LVU95
 345 0044 42F00102 		orr	r2, r2, #1
 346 0048 1A60     		str	r2, [r3]
 101:Core/Src/main.c ****   // USART6->OVER8 = 0;
 347              		.loc 1 101 3 is_stmt 1 view .LVU96
 101:Core/Src/main.c ****   // USART6->OVER8 = 0;
 348              		.loc 1 101 9 is_stmt 0 view .LVU97
 349 004a 1A68     		ldr	r2, [r3]
 101:Core/Src/main.c ****   // USART6->OVER8 = 0;
 350              		.loc 1 101 15 view .LVU98
 351 004c 42F00802 		orr	r2, r2, #8
 352 0050 1A60     		str	r2, [r3]
 353              	.L16:
 108:Core/Src/main.c ****   {
 354              		.loc 1 108 3 is_stmt 1 view .LVU99
 112:Core/Src/main.c ****     HAL_Delay(1000);
 355              		.loc 1 112 5 view .LVU100
ARM GAS  /tmp/cc3jRm2D.s 			page 15


 112:Core/Src/main.c ****     HAL_Delay(1000);
 356              		.loc 1 112 17 is_stmt 0 view .LVU101
 357 0052 064B     		ldr	r3, .L18+8
 358 0054 6122     		movs	r2, #97
 359 0056 9A62     		str	r2, [r3, #40]
 113:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 360              		.loc 1 113 5 is_stmt 1 discriminator 1 view .LVU102
 361 0058 4FF47A70 		mov	r0, #1000
 362 005c FFF7FEFF 		bl	HAL_Delay
 363              	.LVL9:
 108:Core/Src/main.c ****   {
 364              		.loc 1 108 9 view .LVU103
 365 0060 F7E7     		b	.L16
 366              	.L19:
 367 0062 00BF     		.align	2
 368              	.L18:
 369 0064 00380240 		.word	1073887232
 370 0068 00080240 		.word	1073874944
 371 006c 00140140 		.word	1073812480
 372              		.cfi_endproc
 373              	.LFE141:
 375              		.global	tx_buff
 376              		.section	.data.tx_buff,"aw"
 379              	tx_buff:
 380 0000 63       		.byte	99
 381              		.global	huart6
 382              		.section	.bss.huart6,"aw",%nobits
 383              		.align	2
 386              	huart6:
 387 0000 00000000 		.space	136
 387      00000000 
 387      00000000 
 387      00000000 
 387      00000000 
 388              		.text
 389              	.Letext0:
 390              		.file 3 "/home/necrosii/Programs/stm32_toolchain/gcc-arm-none-eabi/arm-none-eabi/include/machine/_
 391              		.file 4 "/home/necrosii/Programs/stm32_toolchain/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdi
 392              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 393              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 394              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 395              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 396              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 397              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 398              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 399              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 400              		.file 13 "<built-in>"
ARM GAS  /tmp/cc3jRm2D.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc3jRm2D.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/cc3jRm2D.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cc3jRm2D.s:91     .text.MX_GPIO_Init:00000040 $d
     /tmp/cc3jRm2D.s:96     .text.Error_Handler:00000000 $t
     /tmp/cc3jRm2D.s:102    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc3jRm2D.s:134    .text.SystemClock_Config:00000000 $t
     /tmp/cc3jRm2D.s:140    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc3jRm2D.s:271    .text.SystemClock_Config:00000084 $d
     /tmp/cc3jRm2D.s:277    .text.main:00000000 $t
     /tmp/cc3jRm2D.s:283    .text.main:00000000 main
     /tmp/cc3jRm2D.s:369    .text.main:00000064 $d
     /tmp/cc3jRm2D.s:379    .data.tx_buff:00000000 tx_buff
     /tmp/cc3jRm2D.s:386    .bss.huart6:00000000 huart6
     /tmp/cc3jRm2D.s:383    .bss.huart6:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
